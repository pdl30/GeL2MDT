# Generated by Django 2.0.1 on 2018-04-05 10:22

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import gel2mdt.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CancerReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discussion', models.TextField(blank=True, db_column='Discussion')),
                ('action', models.TextField(blank=True, db_column='Action')),
                ('classification', models.CharField(choices=[('NA', 'NA'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5')], db_column='classification', default='NA', max_length=2)),
            ],
            options={
                'db_table': 'CancerReport',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ClinicalScientist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('hospital', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=254)),
            ],
            options={
                'db_table': 'ClinicalScientist',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Clinician',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('hospital', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=254)),
                ('added_by_user', models.BooleanField(default=False)),
                ('relates_to', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='gel2mdt.Clinician')),
            ],
            options={
                'db_table': 'Clinician',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Family',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gel_family_id', models.CharField(max_length=200, unique=True)),
                ('trio_sequenced', models.BooleanField()),
                ('has_de_novo', models.BooleanField()),
                ('clinician', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gel2mdt.Clinician')),
            ],
            options={
                'verbose_name_plural': 'Families',
                'db_table': 'Family',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='FamilyPhenotype',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('family', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gel2mdt.Family')),
            ],
            options={
                'db_table': 'FamilyPhenotype',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='GELInterpretationReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived_version', models.IntegerField(default=1)),
                ('status', models.CharField(max_length=200)),
                ('updated', models.DateTimeField()),
                ('sample_type', models.CharField(choices=[('cancer', 'cancer'), ('raredisease', 'raredisease')], max_length=200)),
                ('max_tier', models.CharField(max_length=1)),
                ('user', models.CharField(max_length=200)),
                ('sha_hash', models.CharField(max_length=200)),
                ('polled_at_datetime', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'GELInterpretationReport',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Gene',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ensembl_id', models.CharField(max_length=200)),
                ('hgnc_name', models.CharField(max_length=200)),
                ('hgnc_id', models.CharField(max_length=200, unique=True)),
                ('description', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'Gene',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='InterpretationReportFamily',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ir_family_id', models.CharField(max_length=10, unique=True)),
                ('priority', models.CharField(max_length=200)),
                ('cip', models.CharField(max_length=200)),
                ('participant_family', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='gel2mdt.Family')),
            ],
            options={
                'verbose_name_plural': 'Interpretation report families',
                'db_table': 'InterpretationReportFamily',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='InterpretationReportFamilyPanel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('average_coverage', models.DecimalField(decimal_places=2, max_digits=6, null=True)),
                ('proportion_above_15x', models.DecimalField(decimal_places=5, max_digits=6, null=True)),
                ('genes_failing_coverage', models.TextField(null=True)),
                ('ir_family', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gel2mdt.InterpretationReportFamily')),
            ],
            options={
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ListUpdate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('update_time', models.DateTimeField()),
                ('success', models.BooleanField()),
                ('cases_added', models.IntegerField()),
                ('cases_updated', models.IntegerField()),
                ('error', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MDT',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_mdt', models.DateTimeField()),
                ('description', models.CharField(blank=True, db_column='description', max_length=255, null=True)),
                ('to_report', models.NullBooleanField()),
                ('status', models.CharField(choices=[('A', 'Active'), ('C', 'Completed')], db_column='Status', default='A', max_length=50)),
                ('gatb', models.NullBooleanField()),
                ('clinical_scientists', models.ManyToManyField(to='gel2mdt.ClinicalScientist')),
                ('clinicians', models.ManyToManyField(to='gel2mdt.Clinician')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'MDT',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MDTReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('MDT', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gel2mdt.MDT')),
                ('interpretation_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gel2mdt.GELInterpretationReport')),
            ],
            options={
                'db_table': 'MDTReport',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='OtherStaff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('hospital', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=254)),
            ],
            options={
                'db_table': 'OtherStaff',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Panel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('panel_name', models.CharField(max_length=200)),
                ('panelapp_id', models.CharField(max_length=200, unique=True)),
                ('disease_group', models.CharField(max_length=200)),
                ('disease_subgroup', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'Panel',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PanelVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version_number', models.CharField(max_length=200)),
                ('panel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gel2mdt.Panel')),
            ],
            options={
                'db_table': 'PanelVersion',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PanelVersionGene',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level_of_confidence', models.CharField(max_length=200)),
                ('gene', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gel2mdt.Gene')),
                ('panel_version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gel2mdt.PanelVersion')),
            ],
            options={
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Phenotype',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
                ('hpo_terms', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'Phenotype',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Primer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('primer_set', models.CharField(max_length=200, unique=True)),
                ('left_primer_seq', models.CharField(max_length=200)),
                ('right_primer_seq', models.CharField(max_length=200)),
                ('date_created', models.DateTimeField()),
            ],
            options={
                'db_table': 'Primer',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Proband',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gel_id', models.CharField(max_length=200, unique=True)),
                ('nhs_number', models.CharField(blank=True, max_length=200, null=True)),
                ('lab_number', models.CharField(blank=True, max_length=200, null=True, unique=True)),
                ('forename', models.CharField(max_length=200)),
                ('surname', models.CharField(max_length=200)),
                ('date_of_birth', models.DateTimeField(verbose_name='date_of_birth')),
                ('sex', models.CharField(blank=True, max_length=10, null=True)),
                ('recruiting_disease', models.CharField(blank=True, max_length=200, null=True)),
                ('pilot_case', models.BooleanField(default=False)),
                ('outcome', models.TextField(blank=True)),
                ('comment', models.TextField(blank=True)),
                ('discussion', models.TextField(blank=True)),
                ('action', models.TextField(blank=True)),
                ('episode', models.CharField(blank=True, max_length=255)),
                ('gmc', models.CharField(blank=True, choices=[('GOSH', 'GOSH'), ('MEH', 'MEH'), ('NHNN', 'NHNN'), ('RRV', 'RRV'), ('HHP', 'HHP'), ('RAL', 'RAL'), ('LNWH', 'LNWH'), ('UCLH', 'UCLH'), ('RNOH', 'RNOH'), ('WLGMC', 'WLGMC'), ('Unknown', 'Unknown')], default='Unknown', max_length=255, null=True)),
                ('local_id', models.CharField(blank=True, max_length=255, null=True)),
                ('case_sent', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('N', 'Not Started'), ('U', 'Under Review'), ('M', 'Awaiting MDT'), ('V', 'Awaiting Validation'), ('R', 'Awaiting Reporting'), ('P', 'Reported'), ('C', 'Completed'), ('E', 'External')], default='N', max_length=50)),
                ('mdt_status', models.CharField(choices=[('R', 'Required'), ('N', 'Not Required'), ('I', 'In Progress'), ('D', 'Done')], default='R', max_length=50)),
                ('deceased', models.NullBooleanField()),
                ('family', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='gel2mdt.Family')),
            ],
            options={
                'db_table': 'Proband',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ProbandTranscriptVariant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('selected', models.BooleanField(default=False)),
                ('effect', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'ProbandTranscriptVariant',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ProbandVariant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_tier', models.IntegerField()),
                ('somatic', models.BooleanField()),
                ('vaf', models.DecimalField(decimal_places=3, max_digits=8, null=True)),
                ('requires_validation', models.BooleanField(db_column='Requires_Validation', default=False)),
                ('zygosity', models.CharField(choices=[('heterozygous', 'heterozygous'), ('reference_homozygous', 'reference_homozygous'), ('alternate_homozygous', 'alternate_homozygous'), ('unknown', 'unknown')], default=gel2mdt.models.Zygosities('unknown'), max_length=20)),
                ('maternal_zygosity', models.CharField(choices=[('heterozygous', 'heterozygous'), ('reference_homozygous', 'reference_homozygous'), ('alternate_homozygous', 'alternate_homozygous'), ('unknown', 'unknown')], default=gel2mdt.models.Zygosities('unknown'), max_length=20)),
                ('paternal_zygosity', models.CharField(choices=[('heterozygous', 'heterozygous'), ('reference_homozygous', 'reference_homozygous'), ('alternate_homozygous', 'alternate_homozygous'), ('unknown', 'unknown')], default=gel2mdt.models.Zygosities('unknown'), max_length=20)),
                ('inheritance', models.CharField(choices=[('unknown', 'unknown'), ('de_novo', 'de_novo'), ('inheritance', 'inherited')], default=gel2mdt.models.Inheritance('unknown'), max_length=20)),
                ('interpretation_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gel2mdt.GELInterpretationReport')),
            ],
            options={
                'db_table': 'ProbandVariant',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RareDiseaseReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discussion', models.TextField(blank=True, db_column='Discussion', null=True)),
                ('action', models.TextField(blank=True, db_column='Action', null=True)),
                ('contribution_to_phenotype', models.CharField(choices=[('NA', 'NA'), ('Uncertain', 'Uncertain'), ('None', 'None'), ('Full', 'Full'), ('Partial', 'Partial'), ('SE', 'Secondary')], db_column='Contribution_to_phenotype', default='NA', max_length=20)),
                ('change_med', models.NullBooleanField(db_column='Change_med')),
                ('surgical_option', models.NullBooleanField(db_column='Surgical_Option')),
                ('add_surveillance_for_relatives', models.NullBooleanField(db_column='Add_surveillance_for_relatives')),
                ('clinical_trial', models.NullBooleanField(db_column='Clinical_trial')),
                ('inform_reproductive_choice', models.NullBooleanField(db_column='inform_reproductive_choice')),
                ('classification', models.CharField(choices=[('NA', 'NA'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5')], db_column='classification', default='NA', max_length=2)),
                ('proband_variant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='gel2mdt.ProbandVariant')),
            ],
            options={
                'db_table': 'RareDiseaseReport',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Relative',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gel_id', models.CharField(max_length=200)),
                ('relation_to_proband', models.CharField(max_length=200)),
                ('affected_status', models.CharField(max_length=200)),
                ('nhs_number', models.CharField(max_length=200, null=True)),
                ('lab_number', models.CharField(blank=True, max_length=200, null=True)),
                ('forename', models.CharField(max_length=200)),
                ('surname', models.CharField(max_length=200)),
                ('date_of_birth', models.DateTimeField(verbose_name='date_of_birth')),
                ('sex', models.CharField(blank=True, max_length=10)),
                ('sequenced', models.BooleanField()),
                ('proband', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gel2mdt.Proband')),
            ],
            options={
                'db_table': 'Relative',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ReportEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('re_id', models.CharField(max_length=200)),
                ('tier', models.PositiveIntegerField(null=True)),
                ('mode_of_inheritance', models.CharField(choices=[('monoallelic_not_imprinted', 'monoallelic_not_imprinted'), ('monoallelic_maternally_imprinted', 'monoallelic_maternally_imprinted'), ('monoallelic_paternally_imprinted', 'monoallelic_paternally_imprinted'), ('monoallelic', 'monoallelic'), ('biallelic', 'biallelic'), ('monoallelic_and_biallelic', 'monoallelic_and_biallelic'), ('monoallelic_and_more_severe_biallelic', 'monoallelic_and_more_severe_biallelic'), ('xlinked_biallelic', 'xlinked_biallelic'), ('xlinked_monoallelic', 'xlinked_monoallelic'), ('mitochondrial', 'mitochondrial'), ('unknown', 'unknown')], default=gel2mdt.models.ModesOfInheritance('unknown'), max_length=40)),
                ('penetrance', models.CharField(max_length=200)),
                ('coverage', models.DecimalField(decimal_places=3, max_digits=8, null=True)),
                ('gene', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='gel2mdt.Gene')),
                ('panel', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='gel2mdt.PanelVersion')),
                ('proband_variant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='gel2mdt.ProbandVariant')),
            ],
            options={
                'db_table': 'ReportEvent',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ToolOrAssemblyVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tool_name', models.CharField(max_length=200)),
                ('version_number', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name_plural': 'Tool and assembly versions',
                'db_table': 'ToolOrAssemblyVersion',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Transcript',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('canonical_transcript', models.BooleanField(default=False)),
                ('strand', models.CharField(max_length=255)),
                ('protein', models.CharField(max_length=255, null=True)),
                ('location', models.CharField(max_length=255, null=True)),
                ('gene', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='gel2mdt.Gene')),
                ('genome_assembly', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gel2mdt.ToolOrAssemblyVersion')),
            ],
            options={
                'db_table': 'Transcript',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TranscriptVariant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('af_max', models.CharField(max_length=200)),
                ('hgvs_c', models.TextField()),
                ('hgvs_p', models.TextField()),
                ('hgvs_g', models.TextField()),
                ('sift', models.CharField(max_length=200, null=True)),
                ('polyphen', models.CharField(max_length=200, null=True)),
                ('pathogenicity', models.CharField(max_length=200, null=True)),
                ('transcript', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gel2mdt.Transcript')),
            ],
            options={
                'db_table': 'TranscriptVariant',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Variant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chromosome', models.CharField(max_length=2)),
                ('position', models.IntegerField()),
                ('reference', models.TextField()),
                ('alternate', models.TextField()),
                ('db_snp_id', models.CharField(max_length=200, null=True)),
                ('genome_assembly', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gel2mdt.ToolOrAssemblyVersion')),
            ],
            options={
                'db_table': 'Variant',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='VariantReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('classification', models.IntegerField(default=0)),
                ('alamut_screenshot_splicesites', models.ImageField(blank=True, null=True, upload_to='alamut_images/splicesites/%y/%m')),
                ('alamut_screenshot_sanger', models.ImageField(blank=True, null=True, upload_to='alamut_images/splicesites/%y/%m')),
                ('comments', models.TextField()),
                ('primary_cs', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='primary_cs', to='gel2mdt.ClinicalScientist')),
                ('proband_variant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='gel2mdt.ProbandVariant')),
                ('secondary_cs', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='secondary_cs', to='gel2mdt.ClinicalScientist')),
            ],
            options={
                'db_table': 'VariantReport',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='transcriptvariant',
            name='variant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gel2mdt.Variant'),
        ),
        migrations.AddField(
            model_name='probandvariant',
            name='variant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gel2mdt.Variant'),
        ),
        migrations.AddField(
            model_name='probandtranscriptvariant',
            name='proband_variant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gel2mdt.ProbandVariant'),
        ),
        migrations.AddField(
            model_name='probandtranscriptvariant',
            name='transcript',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gel2mdt.Transcript'),
        ),
        migrations.AddField(
            model_name='primer',
            name='tool',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gel2mdt.ToolOrAssemblyVersion'),
        ),
        migrations.AddField(
            model_name='primer',
            name='variant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gel2mdt.Variant'),
        ),
        migrations.AddField(
            model_name='mdt',
            name='other_staff',
            field=models.ManyToManyField(to='gel2mdt.OtherStaff'),
        ),
        migrations.AddField(
            model_name='interpretationreportfamilypanel',
            name='panel',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gel2mdt.PanelVersion'),
        ),
        migrations.AddField(
            model_name='gelinterpretationreport',
            name='assembly',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gel2mdt.ToolOrAssemblyVersion'),
        ),
        migrations.AddField(
            model_name='gelinterpretationreport',
            name='assigned_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='gelinterpretationreport',
            name='ir_family',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gel2mdt.InterpretationReportFamily'),
        ),
        migrations.AddField(
            model_name='familyphenotype',
            name='phenotype',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gel2mdt.Phenotype'),
        ),
        migrations.AddField(
            model_name='cancerreport',
            name='proband_variant',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='gel2mdt.ProbandVariant'),
        ),
        migrations.AlterUniqueTogether(
            name='transcript',
            unique_together={('name', 'genome_assembly')},
        ),
    ]
